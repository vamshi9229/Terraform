provider "aws" {
  region = "eu-west-2"
}

resource "aws_instance" "demo-server" {
 ami =  "ami-09d6bbc1af02c2ca1"
 key_name =  "vamshi-ec2-keypair"
 instance_type = "t2.micro"
subnet_id = aws_subnet.demo-subnet.id
vpc_security_group_ids = [aws_security_group.demo-vpc-sg.id]
}

// Create vpc
resource "aws_vpc" "demo-vpc" {
  cidr_block = "10.10.0.0/16"
}

// Create subnet
resource "aws_subnet" "demo-subnet" {
  vpc_id     = aws_vpc.demo-vpc.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "demo-subnet"
  }
}

// Create Internet Gateway
resource "aws_internet_gateway" "demo-igw" {
  vpc_id = aws_vpc.demo-vpc.id

  tags = {
    Name = "demo-igw"
  }
}
// Create Route Table
resource "aws_route_table" "demo-routetable" {
  vpc_id = aws_vpc.demo-vpc.id


  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.demo-igw.id
  }
  tags = {
    Name = "demo-routetable"
  }
}

// Associate Subnet with route table

resource "aws_route_table_association" "demo-routetable-aws_route_table_association" {
  subnet_id      = aws_subnet.demo-subnet.id
  route_table_id = aws_route_table.demo-routetable.id
}

// Create a security group
resource "aws_security_group" "demo-vpc-sg" {
  name        = "demo-vpc-sg"
  description = "Allow TLS inbound traffic and all outbound traffic"
  vpc_id      = aws_vpc.demo-vpc.id

  ingress {

    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]

  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
    ipv6_cidr_blocks = ["::/0"]
  }

  tags = {
    Name = "allow_tls"
  }
}
